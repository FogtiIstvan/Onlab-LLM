[
    {
        "criteria": "Memory allocated with malloc() must be explicitly deallocated with free().",
        "answer": "Memory allocated with new must be explicitly deallocated with free()",
        "score": "False",
        "label": 0.7
    },
    {
        "criteria": "Memory allocated with malloc() must be explicitly deallocated with free().",
        "answer": "whereas memory allocated with new should be deallocated with delete.",
        "score": "False",
        "label": 0.5
    },
    {
        "criteria": "Memory allocated with malloc() must be explicitly deallocated with free().",
        "answer": "whereas memory allocated with free() should be deallocated with malloc.",
        "score": "False",
        "label": 0.5
    },
    {
        "criteria": "Memory allocated with malloc() must be explicitly deallocated with free().",
        "answer": "Memory allocated with malloc() must be explicitly deallocated with delete.",
        "score": "False",
        "label": 0.7
    },
    {
        "criteria": "Memory allocated with new must be explicitly deallocated with delete.",
        "answer": "whereas memory allocated with new should be deallocated with delete.",
        "score": "True",
        "label": 0.95
    },
    {
        "criteria": "Memory allocated with new must be explicitly deallocated with delete.",
        "answer": "whereas memory allocated with new should be deallocated with free.",
        "score": "False",
        "label": 0.6
    },
    {
        "criteria": "new is an operator in C++",
        "answer": "Memory allocated with malloc() must be explicitly deallocated with free(), whereas memory allocated with new should be deallocated with delete.",
        "score": "False",
        "label": 0.5
    },
    {
        "criteria": "new is an operator in C++",
        "answer": "new and delete are C++ operators.",
        "score": "True",
        "label": 0.9
    },
    {
        "criteria": "malloc is a function in C",
        "answer": "Memory allocated with malloc() must be explicitly deallocated with free(), whereas memory allocated with new should be deallocated with delete.",
        "score": "False",
        "label": 0.7
    },
    {
        "criteria": "Encapsulation",
        "answer": "The Single Responsibility Principle, the Open-Closed Principle, the Liskov Substitution Principle, the Interface Segregation Principle, the Dependency Inversion Principle",
        "score": "False",
        "label": 0.5
    },
    {
        "criteria": "A pointer stores the memory address of a variable.",
        "answer": "A pointer in C++ is a variable that holds the memory address of another variable.",
        "score": "True",
        "label": 0.88
    },
    {
        "criteria": "A pointer can be dereferenced with '&'",
        "answer": "A pointer in C++ is a variable that holds the memory address of another variable. It allows you to indirectly access the value of the variable it points to. Here's an example",
        "score": "False",
        "label": 0.6
    }
]
